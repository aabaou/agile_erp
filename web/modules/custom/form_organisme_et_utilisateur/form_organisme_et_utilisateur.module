<?php

/**
 * @file
 * Contains form_organisme_et_utilisateur.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Controller\ControllerBase;
use Drupal\Core\Config\Entity\ConfigEntityBundleBase;
use Drupal\form_organisme_et_utilisateur\Controller\OrganismeUserController;
use Drupal\Core\Form\FormState;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Url;
use Drupal\Core\Mail;
use Drupal\taxonomy\Entity\Term;
use Drupal\node\Entity\Node;

/**
 * Implements hook_help().
 */
function form_organisme_et_utilisateur_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the form_organisme_et_utilisateur module.
    case 'help.page.form_organisme_et_utilisateur':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('form to mix form organisme and user') . '</p>';
      return $output;

    default:
  }
}


function form_organisme_et_utilisateur_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    case 'views_exposed_form':
      if($form['#id'] == "views-exposed-form-liste-des-actualites-page-1"){
        $form['field_cette_actualite_est_public_value']['#options'][1] = t('Yes');
        $form['field_cette_actualite_est_public_value']['#options'][0] = t('No');
      }
      if($form['#id'] == "views-exposed-form-repertoire-des-formations-page-1"){
        unset($form['title']);
        $form['title'] = $form['field_diplome_target_id'];
        $options = array();
        $options[''] = '- Tout -';

        $db = \Drupal::database();
        $query = $db->select('node_field_data', 'n');
        $query->leftJoin('node__field_categorie_d_organisme','co','co.entity_id = n.nid');
        $query->leftJoin('node__field_statut_de_l_organisme','so','so.entity_id = n.nid');
        $query->fields('n');
        $query->condition('n.type', "organisme", "=");
        // Partenaire Formation
        $query->condition('co.field_categorie_d_organisme_target_id', "60", "=");
        // Statut actif
        $query->condition('so.field_statut_de_l_organisme_target_id', "72", "=");
        $query->orderBy('n.title', 'ASC');
        $results = $query->execute()->fetchAll();
        foreach ($results as $item){
          $options[$item->title] = $item->title;
        }
        $form['title']['#options'] = $options;
      }
      $form['actions']['submit']['#value'] = t('Rechercher');
      break;
    case 'user_register_form':
      // Page accessible pour les anonymes
      if(\Drupal::service('path.current')->getPath() == "/user/register"){
        $form['field_organisme'] = array();
        $form['field_est_referent_son_organisme'] = array();

        // On donne pas l'accès au champ de validation du user
        $form['field_user_validation']['#access'] = false;
        // On alter le bouton de submit
        $form['actions']['submit']['#value'] = t('Next');
        // Fonction de validate / submit
        $form['#validate'][] = 'form_organisme_et_utilisateur_validate_user_field';
        $form['#submit'] = 'form_organisme_et_utilisateur_submit_advanced_settings';
        $form['actions']['submit']['#submit'][] = 'form_organisme_et_utilisateur_submit_advanced_settings';
      }else{
        // On enleve le required field sur le champ CNIL
        $form['field_user_cnil']['widget']['value']['#required'] = false;
        $form['account']['notify']['#default_value'] = true;
        $form['field_user_validation']['widget']['#default_value'][0] = "validated";
      }
      // On change le titre de la checkbox avec le texte de la CNIL
      $form['field_user_cnil']['widget']['value']['#title'] = 'En cochant cette case, je confirme avoir pris connaissances des conditions d’utilisation des données de mon profil utilisateur de l\'extranet disponible dans la rubrique mentions légales du site <a target="_blank" href="http://grand-est.numeric-emploi.org">grand-est.numeric-emploi.org</a>';
      break;
    case 'user_form':
      $roles = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id())->getRoles();
      $form['field_user_validation']['#access'] = false;
      foreach($roles as $r) {
        if($r == "administrator" || $r == "gestionnaire") {
          // On enleve le required field sur le champ CNIL
          $form['field_user_cnil']['widget']['value']['#required'] = false;
          $form['field_user_cnil']['widget']['value']['#disabled'] = true;
          $form['field_user_validation']['#access'] = true;
        }
      }
      // On change le titre de la checkbox avec le texte de la CNIL
      $form['field_user_cnil']['widget']['value']['#title'] = 'En cochant cette case, je confirme avoir pris connaissances des conditions d’utilisation des données de mon profil utilisateur de l\'extranet disponible dans la rubrique mentions légales du site <a target="_blank" href="http://grand-est.numeric-emploi.org">grand-est.numeric-emploi.org</a>';
      break;
    case 'node_organisme_form':
      $form['#attached']['library'][] = 'form_organisme_et_utilisateur/form_organisme_et_utilisateur';
      $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id())->getRoles();
      if($user[0]=="authenticated" && count($user) == 1){
        $form['field_date_decision_adhesion'] = array();
        $form['field_raison_rejet_adhesion'] = array();
        $form['field_statut_de_l_organisme'] = array();
        $form['field_acceptation_contractuelle'] = array();
        $form['field_type_d_organisme'] = array();
        $form['field_contact_rh']['#access'] = false;

        $form['field_accepter_les_conditions']['widget']['value']['#required'] = true;
        $form['field_representant']['widget']['value']['#required'] = true;

      }else{
        $form['field_accepter_les_conditions']['widget']['value']['#required'] = true;
        $form['field_representant']['widget']['value']['#required'] = true;
        foreach($user as $r) {
          if($r == "administrator" || $r == "gestionnaire") {
            $form['field_accepter_les_conditions']['widget']['value']['#required'] = false;
            $form['field_representant']['widget']['value']['#required'] = false;
          }
        }
      }
      $form['field_accepter_les_conditions']['widget']['value']['#title'] = 'Je certifie avoir pris connaissance des <a href="/sites/default/files/2016-07/STATUTS_Association_Numeric_emploi_Grand_Est-V1.pdf" target="_blank">statuts</a> de l’association, du <a href="/sites/default/files/2016-07/NEGE-RI-VF1.pdf" target="_blank">règlement intérieur</a> et de la <a href="/sites/default/files/2016-07/Numeric_Emploi-grille_de_cotisation.pdf" target="_blank">grille de cotisation</a>, et déclare les accepter.';
      $form['field_representant']['widget']['value']['#title'] = 'Je certifie sur l’honneur avoir les délégations nécessaires pour engager et représenter l’organisme auquel j’appartiens au sein de l’association Numéric’Emploi Grand Est';
      break;
    case 'node_organisme_edit_form':
      $form['#attached']['library'][] = 'form_organisme_et_utilisateur/form_organisme_et_utilisateur';
      $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id())->getRoles();
      if($user[0]=="authenticated" && count($user) == 1){
        $form['field_accepter_les_conditions']['widget']['value']['#required'] = true;
        $form['field_representant']['widget']['value']['#required'] = true;
        $form['field_date_decision_adhesion'] = array();
        $form['field_raison_rejet_adhesion'] = array();
        $form['field-statut-de-l-organisme'] = array();
        $form['field_type_d_organisme'] = array();
      }else{
        foreach($user as $r) {
          if($r == "administrator" || $r == "gestionnaire") {
            $form['field_accepter_les_conditions']['widget']['value']['#disabled'] = true;
            $form['field_representant']['widget']['value']['#disabled'] = true;
          }else{
            if($form['field_type_d_organisme']['widget']['#default_value'][0] == "66"){
              $form['field_representant'] = array();
              $form['field_accepter_les_conditions'] = array();
            }
          }
        }
        $current_path = \Drupal::service('path.current')->getPath();
        $path_args = explode('/', $current_path);
        $node = node_load($path_args[2]);
        $user_node = $node->get('uid')->getValue();
        $uid_node = $user_node[0]['target_id'];
        $uid_session = \Drupal::currentUser()->id();
        if($uid_session == $uid_node){
         $form['field_accepter_les_conditions']['widget']['value']['#required'] = true;
         $form['field_representant']['widget']['value']['#required'] = true;
        }
        $form['field_contact_rh']['widget'][0]['target_id']['#selection_settings']['view']['arguments'][0] = $path_args[2];
      }
      $form['field_accepter_les_conditions']['widget']['value']['#title'] = 'Je certifie avoir pris connaissance des <a href="/sites/default/files/2016-07/STATUTS_Association_Numeric_emploi_Grand_Est-V1.pdf" target="_blank">statuts</a> de l’association, du <a href="/sites/default/files/2016-07/NEGE-RI-VF1.pdf" target="_blank">règlement intérieur</a> et de la <a href="/sites/default/files/2016-07/Numeric_Emploi-grille_de_cotisation.pdf" target="_blank">grille de cotisation</a>, et déclare les accepter.';
      $form['field_representant']['widget']['value']['#title'] = 'Je certifie sur l’honneur avoir les délégations nécessaires pour engager et représenter l’organisme auquel j’appartiens au sein de l’association Numéric’Emploi Grand Est';
      break;
  }
}

function form_organisme_et_utilisateur_submit_advanced_settings(&$form, \Drupal\Core\Form\FormStateInterface $form_state){
  $user = $form_state->getFormObject()->getEntity();
  $user = user_login_finalize($user);
  $response = new RedirectResponse('/node/add/organisme');
  $response->send();
  return;
}

function form_organisme_et_utilisateur_node_insert(Drupal\Core\Entity\EntityInterface $node) {

  $node_type = $node->getType();

  $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
  $user_role = $user->getRoles();

  // Si c'est un organisme
  if($node_type == "organisme"){
    // Que l'utilisateur a pour seul role : authenticated
    if($user_role[0]=="authenticated" && count($user_role) == 1) {
      // On lui assigne l'organisme
      $user_organisme = $user->get('field_organisme');
      $user_organisme->setValue($node->id());
      $user_organisme->setValue(intval($node->id()));
      $user->save();

      // On envoi un mail
      $mail = $user->get('mail')->getValue();
      $reply = 'donotreply.ge@numeric-emploi.org';
      $mailManager = \Drupal::service('plugin.manager.mail');
      $mailManager->mail("form_organisme_et_utilisateur", 'after_creating_organisme_admin', 'president.ge@numeric-emploi.org', 'fr', array('node' => $node),$reply);
      $mailManager->mail("form_organisme_et_utilisateur", 'after_creating_organisme_user', $mail[0]['value'], 'fr', array('node' => $node),$reply);

      // On lui assigne 2 roles (representant_organisme & utilisateur_non_valide)
      $user->addRole("representant_organisme");
      $user->addRole("utilisateur_non_valide");
      $user->set('status', 0);
      $user->save();

      // On déconnecte l'utilisateur
      user_logout($user);
    }
  }
}

function form_organisme_et_utilisateur_entity_presave(Drupal\Core\Entity\EntityInterface $entity){
  // Si l'entity type est user
  if($entity->getEntityTypeId() == "user"){
    // Si on se trouve dans le BO et non sur la page de création de user drupal en FO
    if(\Drupal::service('path.current')->getPath() != "/user/register") {
      // On récupère le status de l'utilisateur
      $status = $entity->get('field_user_validation')->getValue();

      // On execute différentes actions en fonction du status
      switch($status[0]['value']) {
        case 'validated':
          $roles = $entity->getRoles();
          foreach($roles as $r) {
            if($r == "utilisateur_non_valide") {
              $entity->removeRole("utilisateur_non_valide");
              $entity->set('status', 1);
              break;
            }
          }
          break;
        case 'waiting':
          $entity->addRole("utilisateur_non_valide");
          break;
        case 'block':
          $entity->addRole("utilisateur_non_valide");
          $entity->set('status', 0);
          break;

      }
    }else{
      $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
      $user_role = $user->getRoles();
      if($user_role[0]=="authenticated" && count($user_role) == 1) {
        $entity->removeRole("utilisateur_non_valide");
      }
    }
  }
}

/**
 * Implements hook_mail().
 */
function form_organisme_et_utilisateur_mail($key, &$message, $params) {
  switch ($key) {
    case 'after_creating_organisme_admin':
      $node = $params['node'];
      $title = $node->get('title')->getValue();
      $categorie = $node->get('field_categorie_d_organisme')->getValue();
      $categorie = taxonomy_term_load($categorie[0]['target_id']);
      $categorie = $categorie->get('name')->value;
      $subject = t('@name  - @category', array('@name' => $title[0]['value'], '@category' => $categorie));

      //Zone géographique
      $field_territoire = $node->get('field_territoire')->getValue();
      $territoire = "";
      foreach ($field_territoire as $item){
        $term = taxonomy_term_load($item['target_id']);
        $territoire .= $term->get('name')->value.",";
      }

      //Type entreprise
      $field_type_d_entreprise = $node->get('field_type_d_entreprise')->getValue();
      $type_d_entreprise = "";
      foreach ($field_type_d_entreprise as $item){
        $term = taxonomy_term_load($item['target_id']);
        $type_d_entreprise .= $term->get('name')->value.",";
      }

      //Activités principales
      $field_activites_principales = $node->get('field_activites_principales')->getValue();
      $activites_principales = "";
      foreach ($field_activites_principales as $item){
        $term = taxonomy_term_load($item['target_id']);
        $activites_principales .= $term->get('name')->value.",";
      }

      //Zones géographiques d'intervention
      $field_territoires_d_intervention = $node->get('field_territoires_d_intervention')->getValue();
      $territoires_d_intervention = "";
      foreach ($field_territoires_d_intervention as $item){
        $term = taxonomy_term_load($item['target_id']);
        $territoires_d_intervention .= $term->get('name')->value.",";
      }


      //Affiliation
      $field_affiliation = $node->get('field_affiliation')->getValue();
      $affiliation = [];
      foreach ($field_affiliation as $item){
        $ref_node = Node::load($item['target_id']);
        $affiliation[] = $ref_node->get('title')->value;
      }

      //Périmètre d'adhésion
      $field_adhesion_alsace = $node->get('field_adhesion_alsace')->getValue();
      $field_adhesion_champagne_ardenne = $node->get('field_adhesion_champagne_ardenne')->getValue();
      $field_adhesion_lorraine = $node->get('field_adhesion_lorraine')->getValue();


      $uid_node = $node->get('uid')->getValue();
      $user_node = \Drupal\user\Entity\User::load($uid_node[0]['target_id']);

      $user_node_nom = $user_node->get('field_nom')->getValue();
      $user_node_nom = $user_node_nom[0]['value'];
      $user_node_prenom = $user_node->get('field_prenom')->getValue();
      $user_node_prenom = $user_node_prenom[0]['value'];

      $message['subject'] = $subject;
      $message['body'][] = "Un compte et un organisme viennent d'être crées sur Numeric Emploi.\n";
      $message['body'][] = "Utilisateur : ".$user_node_nom." ".$user_node_prenom."\n\n";
      $message['body'][] = "Nom de l'organisme : ".$title[0]['value']."\n";
      $message['body'][] = "Catégorie de l'organisme : ".$categorie."\n";
      $message['body'][] = "Zone géographique de la direction régionale : ".substr($territoire, 0, -1)."\n";
      $message['body'][] = "Type entreprise : ".substr($type_d_entreprise, 0, -1)."\n";
      $message['body'][] = "Activités principales : ".substr($activites_principales, 0, -1)."\n";
      $message['body'][] = "Zones géographiques d'intervention : ".substr($territoires_d_intervention, 0, -1)."\n";
      $message['body'][] = "Affiliation : " . implode(',', $affiliation) . "\n";
      $message['body'][] = "Périmètre d'adhésion Alsace : ".$field_adhesion_alsace[0]['value']."\n";
      $message['body'][] = "Périmètre d'adhésion Champagne Ardenne : ".$field_adhesion_champagne_ardenne[0]['value']."\n";
      $message['body'][] = "Périmètre d'adhésion Lorraire : ".$field_adhesion_lorraine[0]['value']."\n";
    break;
    case 'after_creating_organisme_user':
      $message['subject'] = t('Votre compte est en cours de validation');
      $message['body'][] = "Bonjour,\n";
      $message['body'][] = "Nous vous remercions pour votre demande d'inscription. Votre demande est actuellement en cours de validation. \n";
      $message['body'][] = "Une fois la validation faite, vous recevrez un autre courriel de confirmation contenant les informations vous permettant de vous connecter, choisir votre mot de passe ainsi que d'autres détails.\n";
      $message['body'][] = "L'équipe de Numéric Emploi";
    break;
  }
}

function form_organisme_et_utilisateur_mail_alter(&$message) {
  if ($message['id'] == 'user_register_no_approval_required') {
    $message['send'] = FALSE;
  }
}